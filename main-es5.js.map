{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/albums/album-detail.component.ts","webpack:///src/app/albums/album-detail.component.html","webpack:///src/app/albums/album-list.component.ts","webpack:///src/app/albums/album-list.component.html","webpack:///src/app/albums/album.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/shared/convert-to-spaces.pipe.ts","webpack:///src/app/shared/star.component.ts","webpack:///src/app/shared/star.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlbumDetailComponent","route","router","albumService","pageTitle","errorMessage","param","snapshot","paramMap","get","getAlbum","subscribe","next","album","error","err","navigate","onBack","templateUrl","styleUrls","AlbumListComponent","imageWidth","imageMargin","showImage","albums","message","filterBy","toLocaleLowerCase","filter","albumTitle","indexOf","getAlbums","filteredAlbums","_listFilter","value","listFilter","performFilter","AlbumService","http","albumUrl","pipe","data","console","log","JSON","stringify","handleError","find","a","albumId","ErrorEvent","status","providedIn","routes","AppRoutingModule","forRoot","imports","AppComponent","selector","template","AppModule","path","component","redirectTo","pathMatch","declarations","providers","bootstrap","WelcomeComponent","ConvertToSpacesPipe","character","replace","name","StarComponent","microphoneIcon","ratingClicked","starWidth","rating","emit","onClick","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\n\nimport { IAlbum } from './album';\nimport { AlbumService } from './album.service';\n\n@Component({\n  templateUrl: './album-detail.component.html',\n  styleUrls: ['./album-detail.component.css']\n})\nexport class AlbumDetailComponent implements OnInit {\n  pageTitle = 'Album Detail';\n  errorMessage = '';\n  album: IAlbum | undefined;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private albumService: AlbumService) {\n  }\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getAlbum(id);\n    }\n  }\n\n  getAlbum(id: number) {\n    this.albumService.getAlbum(id).subscribe({\n      next: album => this.album = album,\n      error: err => this.errorMessage = err\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/albums']);\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle + ': ' + album.albumTitle }}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-4\">Title:</div>\n          <div class=\"col-md-8\">{{album.albumTitle}}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">Artist:</div>\n          <div class=\"col-md-8\">{{ album.artist }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">Description:</div>\n          <div class=\"col-md-8\">{{ album.description }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">Release Date:</div>\n          <div class=\"col-md-8\">{{ album.releaseDate }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">Price:</div>\n          <div class=\"col-md-8\">{{ album.price }}</div>\n        </div>\n        <div class='row'>\n          <div class='col-md-4'>5 Mic Rating:</div>\n          <div class='col-md-8'>\n            <am-star [rating]='album.starRating'>\n            </am-star>\n          </div>\n        </div>\n      </div>\n      <div class='col-md-4'>\n        <img class='center-block img-responsive'\n             [style.width.px]='200'\n             [style.margin.px]='2'\n             [src]='album.imageUrl'\n             [title]='album.albumTitle'>\n      </div>\n    </div>\n  </div>\n  <div class='card-footer'>\n    <button class='btn btn-outline-secondary'\n            (click)='onBack()'\n            style='width:80px'>\n      <i class='fa fa-chevron-left'></i> Back\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IAlbum } from './album';\nimport { AlbumService } from './album.service';\n\n@Component({\n  templateUrl: './album-list.component.html',\n  styleUrls: ['./album-list.component.css']\n})\n\nexport class AlbumListComponent implements OnInit {\n  pageTitle: string = \"Album List\";\n  imageWidth: number = 50;\n  imageMargin: number = 2;\n  showImage: boolean = true;\n  _listFilter: string;\n  errorMessage: string;\n\n  get listFilter(): string {\n    return this._listFilter;\n  }\n\n  set listFilter(value:string) {\n    this._listFilter = value;\n    this.filteredAlbums = this.listFilter ? this.performFilter(this.listFilter) : this.albums;\n  }\n\n  filteredAlbums: IAlbum[];\n  albums: IAlbum[] = [];\n\n  constructor(private albumService: AlbumService) {\n\n  }\n\n  onRatingClicked(message: string) : void {\n    this.pageTitle = 'Album List: ' + message;\n  }\n\n  performFilter(filterBy: string): IAlbum[] {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.albums.filter((album: IAlbum) =>\n      album.albumTitle.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n\n  toggleImage(): void {\n    this.showImage = !this.showImage;\n  }\n\n  ngOnInit(): void {\n    this.albumService.getAlbums().subscribe({\n      next: albums => {\n        this.albums = albums,\n        this.filteredAlbums = this.albums\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <table class=\"table\"\n      *ngIf='albums && albums.length'>\n      <thead>\n        <tr>\n          <th>\n          </th>\n          <th>Album Title</th>\n          <th>Artist</th>\n          <th>Release Date</th>\n          <th>Price</th>\n          <th>5 🎤 Rating</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor='let album of filteredAlbums'>\n          <td>\n            <img\n              *ngIf=\"showImage\"\n              [src]='album.imageUrl'\n              [title]='album.albumTitle'\n              [style.width.px]='imageWidth'\n              [style.margin.px]='imageMargin'>\n          </td>\n          <td><a [routerLink]=\"['/albums', album.albumId]\">\n            {{ album.albumTitle }}\n              </a>\n          </td>\n          <td>{{ album.artist | convertToSpaces: '-' }}</td>\n          <td>{{ album.releaseDate }}</td>\n          <td>{{ album.price | currency: 'USD': 'symbol':'1.2-2' }}</td>\n          <td>\n            <am-star [rating]='album.starRating' (ratingClicked)='onRatingClicked($event)'></am-star>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { IAlbum } from './album';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumService {\n  private albumUrl = 'assets/albums/albums.json';\n\n  constructor(private http: HttpClient) {}\n\n  getAlbums(): Observable<IAlbum[]> {\n    return this.http.get<IAlbum[]>(this.albumUrl).pipe(\n      tap(data => console.log('All: ' + JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n\n  getAlbum(id: number): Observable<IAlbum | undefined> {\n    return this.getAlbums()\n      .pipe(\n        map((albums: IAlbum[]) => albums.find(a => a.albumId === id))\n      );\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure instead of just logging it to the console\n    let errorMessage = '';\n    if (err. error instanceof ErrorEvent) {\n      // A client-side or network error occured. Handle it accordingly.\n      errorMessage = `An error occured: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <header>\n    <nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">{{pageTitle}}</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" [routerLink]=\"['/welcome']\">Home <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"['/albums']\">Album List</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n\n  <router-outlet></router-outlet>\n  `,\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageTitle: string = 'Top 100 Hip-Hop Albums';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AlbumListComponent } from './albums/album-list.component';\nimport { ConvertToSpacesPipe } from './shared/convert-to-spaces.pipe';\nimport { StarComponent } from './shared/star.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { AlbumDetailComponent } from './albums/album-detail.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\nimport { fromEventPattern } from 'rxjs';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlbumListComponent,\n    ConvertToSpacesPipe,\n    StarComponent,\n    AlbumDetailComponent,\n    WelcomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'albums', component: AlbumListComponent },\n      { path: 'albums/:id', component: AlbumDetailComponent },\n      { path: 'welcome', component: WelcomeComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Top 100 Hip-Hop Albums of All Time';\n}\n","<div class=\"card background\">\n  <div class=\"color-overlay\"></div>\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container-fluid\">\n      <div class=\"text-center\"></div>\n    </div>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'convertToSpaces'\n})\nexport class ConvertToSpacesPipe implements PipeTransform {\n  transform(value:  string, character: string): string {\n    return value.replace(character, ' ');\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { faMicrophone } from '@fortawesome/free-solid-svg-icons';\n//import { EventEmitter } from 'protractor';\n\n@Component({\n  selector: 'am-star',\n  templateUrl: './star.component.html',\n  styleUrls: ['./star.component.css']\n})\n\nexport class StarComponent implements OnChanges {\n  @Input() rating: number;\n  starWidth: number;\n  microphoneIcon = faMicrophone;\n  @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n\n  ngOnChanges(): void {\n    this.starWidth = this.rating * 75 / 5;\n  }\n\n  onClick(): void {\n    this.ratingClicked.emit(`The rating ${this.rating} was clicked!`)\n  }\n}\n","<div class=\"crop\"\n    [style.width.px]=\"starWidth\"\n    [title]=\"rating\"\n    (click)=\"onClick()\">\n  <div style=\"width: 75px;\">\n    <fa-icon [icon]=\"microphoneIcon\"></fa-icon>\n    <fa-icon [icon]=\"microphoneIcon\"></fa-icon>\n    <fa-icon [icon]=\"microphoneIcon\"></fa-icon>\n    <fa-icon [icon]=\"microphoneIcon\"></fa-icon>\n    <fa-icon [icon]=\"microphoneIcon\"></fa-icon>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}